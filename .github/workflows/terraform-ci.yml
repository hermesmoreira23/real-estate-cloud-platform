name: Terraform & App CI 

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform Validate & Plan'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

      - name: Terraform Plan
        run: |
          terraform plan \
            -var 'public_subnet_id=YOUR_PUBLIC_SUBNET_ID' \
            -var 'key_name=YOUR_KEY_NAME' \
            -var 'security_group_id=YOUR_SECURITY_GROUP_ID' \
            -var 'ec2_role_name=YOUR_EC2_ROLE_NAME' \
            -var 'private_subnet_ids=["YOUR_PRIVATE_SUBNET_ID"]' \
            -var 'db_security_group_id=YOUR_DB_SECURITY_GROUP_ID' \
            -var 'db_name=YOUR_DB_NAME' \
            -var 'db_username=YOUR_DB_USERNAME' \
            -var 'db_password=YOUR_DB_PASSWORD' \
            -var 'ec2_instance_id=YOUR_EC2_INSTANCE_ID' \
            -var 'vpc_id=YOUR_VPC_ID' \
            -var 'my_ip_cidr=YOUR_MY_IP_CIDR' \
            -var 'bucket_name=YOUR_BUCKET_NAME' \
            -var 'project_tag=RealEstateCloud' \
            -var 'environment=dev' \
            -var 'vpc_cidr_block=10.0.0.0/16' \
            -var 'public_subnet_cidr=10.0.1.0/24' \
            -var 'availability_zone=eu-west-1a' \
            -var 'vpc_name=free-tier-vpc' \
            -var 'subnet_name=free-tier-public-subnet-1' \
            -var 'private_subnet_cidr=YOUR_PRIVATE_SUBNET_CIDR' \
            -var 'db_allocated_storage=20'
        working-directory: terraform

  docker-build:
    name: 'Build Docker Image (Safe)'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t real-estate-app .

  app-test:
    name: 'FastAPI App Tests'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt pytest

      - name: Run tests
        run: pytest  
