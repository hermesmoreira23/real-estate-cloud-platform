name: Terraform & App CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  terraform:
    name: Terraform Validate & Plan
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:    eu-west-1
      TF_VAR_db_username:    ${{ secrets.TF_VAR_DB_USERNAME }}
      TF_VAR_db_password:    ${{ secrets.TF_VAR_DB_PASSWORD }}
      RDS_ENDPOINT:          ${{ steps.terraform.outputs.rds_endpoint }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Clean Terraform cache
        working-directory: terraform
        run: rm -rf .terraform .terraform.lock.hcl

      - name: Terraform Init (no backend)
        working-directory: terraform
        run: terraform init -backend=false

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan (dry-run)
        working-directory: terraform
        run: |
          terraform plan \
            -lock=false \
            -input=false \
            -refresh=false \
            -var-file=terraform.tfvars

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build \
            --file app/Dockerfile \
            --tag real-estate-app:latest \
            .

  jobs:
  # … tu job de Terraform y Docker aquí …

  app-test:
    name: FastAPI App Tests
    runs-on: ubuntu-latest
    needs: docker-build

    # 1️⃣ Levantamos un servicio de Postgres solo para este job
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER:     admin
          POSTGRES_PASSWORD: realhermes88
          POSTGRES_DB:       realestate
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U admin -d realestate"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # 2️⃣ Variables de entorno, apuntamos DATABASE_URL al servicio
    env:
      DATABASE_URL: postgresql://admin:realhermes88@localhost:5432/realestate
      PYTHONPATH:    ${{ github.workspace }}/app

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt pytest

      - name: Run tests
        run: pytest tests


        



