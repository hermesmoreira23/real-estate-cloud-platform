name: Terraform & FastAPI CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # ───────────── 1️⃣ Terraform Validate & Plan ─────────────
  terraform:
    name: Terraform Validate & Plan
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:    eu-west-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Clean Terraform cache
        run: rm -rf .terraform .terraform.lock.hcl
        working-directory: terraform

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

      - name: Terraform Plan
        run: |
          terraform plan \
            -var 'aws_region=eu-west-1' \
            -var 'public_subnet_id=subnet-12345678' \
            -var 'key_name=my-key' \
            -var 'security_group_id=sg-12345678' \
            -var 'ec2_role_name=my-ec2-role' \
            -var 'private_subnet_ids=["subnet-87654321"]' \
            -var 'db_security_group_id=sg-87654321' \
            -var 'db_name=mydb' \
            -var 'db_username=admin' \
            -var 'db_password=changeme' \
            -var 'ec2_instance_id=i-12345678' \
            -var 'vpc_id=vpc-12345678' \
            -var 'my_ip_cidr=1.2.3.4/32' \
            -var 'bucket_name=my-unique-bucket-123' \
            -var 'project_tag=RealEstateCloud' \
            -var 'environment=dev' \
            -var 'vpc_cidr_block=10.0.0.0/16' \
            -var 'public_subnet_cidr=10.0.1.0/24' \
            -var 'availability_zone=eu-west-1a' \
            -var 'vpc_name=free-tier-vpc' \
            -var 'subnet_name=free-tier-public-subnet-1' \
            -var 'private_subnet_cidr=10.0.2.0/24' \
            -var 'db_allocated_storage=20' \
            -var 'db_instance_class=db.t3.micro' \
            -var 'db_engine_version=15.4'
        working-directory: terraform

  # ───────────── 2️⃣ Build & Tag Docker Image ─────────────
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug workspace contents
        run: |
          echo "PWD: $PWD"
          ls -R .

      - name: Build Docker image
        run: docker build -f app/Dockerfile -t fastapi-docker-app app

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            eu-west-1

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region eu-west-1 \
          | docker login --username AWS \
            --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com

      - name: Tag & push image to ECR
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com/real-estate-app:${{ github.sha }}
          docker tag fastapi-docker-app:latest $IMAGE_URI
          docker push $IMAGE_URI

  # ───────────── 3️⃣ FastAPI App Tests ─────────────
  app-test:
    name: FastAPI App Tests
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt pytest

      - name: Run tests
        run: pytest tests
